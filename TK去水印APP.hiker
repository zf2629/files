海阔视界规则分享，当前分享的是：小程序￥home_rule_v2￥base64://@TK去水印APP@eyJsYXN0X2NoYXB0ZXJfcnVsZSI6IiIsInRpdGxlIjoiVEvljrvmsLTljbBBUFAiLCJhdXRob3IiOiJ6aGFvIiwidXJsIjoiaGlrZXI6Ly9lbXB0eSMjIiwidmVyc2lvbiI6MjAyNDEyMzExNiwiY29sX3R5cGUiOiJtb3ZpZV8zIiwiY2xhc3NfbmFtZSI6IiIsInR5cGUiOiJ0b29sIiwiY2xhc3NfdXJsIjoiIiwiYXJlYV9uYW1lIjoiIiwiYXJlYV91cmwiOiIiLCJzb3J0X25hbWUiOiIiLCJ5ZWFyX25hbWUiOiIiLCJzb3J0X3VybCI6IiIsInllYXJfdXJsIjoiIiwiZmluZF9ydWxlIjoianM6XG52YXIgZCA9IFtdXG4vL2xvZyhnZXRNeVZhcignYScpKVxuaWYoZ2V0TXlWYXIoJ2EnKSA9PSAnJyl7XG52YXIgaHRtbHJ0ID0gSlNPTi5wYXJzZShmZXRjaCgnaHR0cHM6Ly90Y2ItYXBpLnRlbmNlbnRjbG91ZGFwaS5jb20vd2ViP2Vudj10Y2Itc2puajlubHg0ZWM0N2QtNmQzc2xjNDIwODE4YycseyBcbiAgICBoZWFkZXJzOiB7XG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgXCJhY3Rpb25cIjogXCJhdXRoLnNpZ25JbkFub255bW91c2x5XCIsXG4gICAgICBcImVudlwiOiBcInRjYi1zam5qOW5seDRlYzQ3ZC02ZDNzbGM0MjA4MThjXCIsXG4gICAgICBcImRhdGFWZXJzaW9uXCI6XCIyMDE5LTA4LTE2XCJcbiAgICB9KSxcbiAgICBtZXRob2Q6ICdQT1NUJ1xufSkpOyAvL2xvZyhodG1scnQpXG52YXIgcmVmcmVzaF90b2tlbiA9IGh0bWxydC5yZWZyZXNoX3Rva2VuOyAvL2xvZyhyZWZyZXNoX3Rva2VuKVxuXG52YXIgaHRtbHRrID0gSlNPTi5wYXJzZShmZXRjaCgnaHR0cHM6Ly90Y2ItYXBpLnRlbmNlbnRjbG91ZGFwaS5jb20vd2ViP2Vudj10Y2Itc2puajlubHg0ZWM0N2QtNmQzc2xjNDIwODE4YycseyBcbiAgICBoZWFkZXJzOiB7XG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgXCJhY3Rpb25cIjogXCJhdXRoLmZldGNoQWNjZXNzVG9rZW5XaXRoUmVmcmVzaFRva2VuXCIsXG4gICAgICBcImVudlwiOiBcInRjYi1zam5qOW5seDRlYzQ3ZC02ZDNzbGM0MjA4MThjXCIsXG4gICAgICBcImRhdGFWZXJzaW9uXCI6IFwiMjAxOS0wOC0xNlwiLFxuICAgICAgXCJyZWZyZXNoX3Rva2VuXCI6IHJlZnJlc2hfdG9rZW5cbiAgICB9KSxcbiAgICBtZXRob2Q6ICdQT1NUJ1xufSkpOyAvL2xvZyhodG1sdGspXG52YXIgYWNjZXNzX3Rva2VuID0gaHRtbHRrLmFjY2Vzc190b2tlblxudmFyIHNlcUlkID0gaHRtbHRrLnNlcUlkXG5cbnZhciBodG1sMTEgPSBmZXRjaCgnaHR0cHM6Ly90Y2ItYXBpLnRlbmNlbnRjbG91ZGFwaS5jb20vd2ViP2Vudj10Y2Itc2puajlubHg0ZWM0N2QtNmQzc2xjNDIwODE4YycseyBcbiAgICBoZWFkZXJzOiB7XG4gICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgXCJhY3Rpb25cIjogXCJmdW5jdGlvbnMuaW52b2tlRnVuY3Rpb25cIixcbiAgICAgIFwiZW52XCI6IFwidGNiLXNqbmo5bmx4NGVjNDdkLTZkM3NsYzQyMDgxOGNcIixcbiAgICAgIFwiZGF0YVZlcnNpb25cIjogXCIyMDE5LTA4LTE2XCIsXG4gICAgICBcImZ1bmN0aW9uX25hbWVcIjogXCJEQ2xvdWQtY2xpZW50REJcIixcbiAgICAgIFwicmVxdWVzdF9kYXRhXCI6IFwie1xcXCJjb21tYW5kXFxcIjp7XFxcIiRkYlxcXCI6W3tcXFwiJG1ldGhvZFxcXCI6XFxcImNvbGxlY3Rpb25cXFwiLFxcXCIkcGFyYW1cXFwiOltcXFwibWlhb1xcXCJdfSx7XFxcIiRtZXRob2RcXFwiOlxcXCJsaW1pdFxcXCIsXFxcIiRwYXJhbVxcXCI6WzZdfSx7XFxcIiRtZXRob2RcXFwiOlxcXCJnZXRcXFwiLFxcXCIkcGFyYW1cXFwiOltdfV19LFxcXCJjbGllbnRJbmZvXFxcIjp7XFxcIlBMQVRGT1JNXFxcIjpcXFwiYXBwXFxcIixcXFwiT1NcXFwiOlxcXCJhbmRyb2lkXFxcIixcXFwiQVBQSURcXFwiOlxcXCJfX1VOSV9fREI3RjlGM1xcXCIsXFxcIkRFVklDRUlEXFxcIjpcXFwiQjAxMkI3MDlFMzk1QTJEQTZENTc3NEZDNTg2Q0Y4NDJcXFwiLFxcXCJjaGFubmVsXFxcIjpcXFwiXFxcIixcXFwic2NlbmVcXFwiOjEwMDEsXFxcImFwcElkXFxcIjpcXFwiX19VTklfX0RCN0Y5RjNcXFwiLFxcXCJhcHBMYW5ndWFnZVxcXCI6XFxcInpoLUhhbnNcXFwiLFxcXCJhcHBOYW1lXFxcIjpcXFwi56eS5Y675rC05Y2w546LXFxcIixcXFwiYXBwVmVyc2lvblxcXCI6XFxcIjIuMC4xXFxcIixcXFwiYXBwVmVyc2lvbkNvZGVcXFwiOjIwMSxcXFwiYXBwV2d0VmVyc2lvblxcXCI6XFxcIjEuMC4yXFxcIixcXFwiYnJvd3Nlck5hbWVcXFwiOlxcXCJjaHJvbWVcXFwiLFxcXCJicm93c2VyVmVyc2lvblxcXCI6XFxcIjk5LjAuNDg0NC44OFxcXCIsXFxcImRldmljZUJyYW5kXFxcIjpcXFwieGlhb21pXFxcIixcXFwiZGV2aWNlSWRcXFwiOlxcXCJCMDEyQjcwOUUzOTVBMkRBNkQ1Nzc0RkM1ODZDRjg0MlxcXCIsXFxcImRldmljZU1vZGVsXFxcIjpcXFwiMjIwMjEyMTFSQ1xcXCIsXFxcImRldmljZU9yaWVudGF0aW9uXFxcIjpcXFwicG9ydHJhaXRcXFwiLFxcXCJkZXZpY2VQaXhlbFJhdGlvXFxcIjoyLjc1LFxcXCJkZXZpY2VUeXBlXFxcIjpcXFwicGhvbmVcXFwiLFxcXCJlcnJNc2dcXFwiOlxcXCJnZXRTeXN0ZW1JbmZvU3luYzpva1xcXCIsXFxcIm9haWRcXFwiOlxcXCJhYmVjMGRmZmY2MjMyMDFiXFxcIixcXFwib3NBbmRyb2lkQVBJTGV2ZWxcXFwiOjMxLFxcXCJvc0xhbmd1YWdlXFxcIjpcXFwiemgtQ05cXFwiLFxcXCJvc05hbWVcXFwiOlxcXCJhbmRyb2lkXFxcIixcXFwib3NUaGVtZVxcXCI6XFxcImxpZ2h0XFxcIixcXFwib3NWZXJzaW9uXFxcIjpcXFwiMTJcXFwiLFxcXCJyb21OYW1lXFxcIjpcXFwiTUlVSVxcXCIsXFxcInJvbVZlcnNpb25cXFwiOlxcXCJWMTMwXFxcIixcXFwic2FmZUFyZWFcXFwiOntcXFwibGVmdFxcXCI6MCxcXFwicmlnaHRcXFwiOjM5MyxcXFwidG9wXFxcIjowLFxcXCJib3R0b21cXFwiOjc1MCxcXFwid2lkdGhcXFwiOjM5MyxcXFwiaGVpZ2h0XFxcIjo3NTB9LFxcXCJzYWZlQXJlYUluc2V0c1xcXCI6e1xcXCJ0b3BcXFwiOjAsXFxcInJpZ2h0XFxcIjowLFxcXCJib3R0b21cXFwiOjAsXFxcImxlZnRcXFwiOjB9LFxcXCJzY3JlZW5IZWlnaHRcXFwiOjg3MyxcXFwic2NyZWVuV2lkdGhcXFwiOjM5MyxcXFwic3RhdHVzQmFySGVpZ2h0XFxcIjoyOSxcXFwidWFcXFwiOlxcXCJNb3ppbGxhLzUuMCAoTGludXg7IEFuZHJvaWQgMTI7IDIyMDIxMjExUkMgQnVpbGQvU0tRMS4yMTEwMDYuMDAxOyB3dikgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgVmVyc2lvbi80LjAgQ2hyb21lLzk5LjAuNDg0NC44OCBNb2JpbGUgU2FmYXJpLzUzNy4zNiB1bmktYXBwIChJbW1lcnNlZC8yOS4wOTA5MSlcXFwiLFxcXCJ1bmlDb21waWxlVmVyc2lvblxcXCI6XFxcIjMuNy4xMVxcXCIsXFxcInVuaVBsYXRmb3JtXFxcIjpcXFwiYXBwXFxcIixcXFwidW5pUnVudGltZVZlcnNpb25cXFwiOlxcXCIzLjcuMTFcXFwiLFxcXCJ3aW5kb3dCb3R0b21cXFwiOjAsXFxcIndpbmRvd0hlaWdodFxcXCI6NzUwLFxcXCJ3aW5kb3dUb3BcXFwiOjAsXFxcIndpbmRvd1dpZHRoXFxcIjozOTMsXFxcImxvY2FsZVxcXCI6XFxcInpoLUhhbnNcXFwiLFxcXCJMT0NBTEVcXFwiOlxcXCJ6aC1IYW5zXFxcIn19XCIsXG4gICAgICBcImFjY2Vzc190b2tlblwiOiBhY2Nlc3NfdG9rZW4sXG4gICAgICBcInNlcUlkXCI6IHNlcUlkXG4gICAgfSksXG4gICAgbWV0aG9kOiAnUE9TVCdcbn0pOyAvL2xvZyhodG1sMTEpXG52YXIgaHRtbDEyID0gSlNPTi5wYXJzZShodG1sMTEpLmRhdGEucmVzcG9uc2VfZGF0YTsgLy9sb2coaHRtbDEyKVxudmFyIGxpc3QxMSA9IEpTT04ucGFyc2UoaHRtbDEyKS5kYXRhOyAvL2xvZyhsaXN0MTEpXG5zdG9yYWdlMC5wdXRNeVZhcignbGlzdDExJyxsaXN0MTEpXG4vL2xvZyhzdG9yYWdlMC5nZXRNeVZhcignbGlzdDExJykpXG5wdXRNeVZhcignYScsJzEnKVxufVxudmFyIGxpc3QxMSA9IHN0b3JhZ2UwLmdldE15VmFyKCdsaXN0MTEnKVxudmFyIGxpc3QxMiA9IGxpc3QxMVtsaXN0MTEubGVuZ3RoIC0gMV07IC8vbG9nKGxpc3QxMilcbnZhciBsaXN0MTMgPSBbbGlzdDEyLmhlLGxpc3QxMi5pbnMsbGlzdDEyLmluc3MsbGlzdDEyLmppYW5nLC8qbGlzdDEyLmxpYW4qLydodHRwczovL3ZkZHMubWF5aXNvc28uY29tL2FwaS92Mi8yRURFNTcxMjk4MTU1NDY5RTk0NUFEQzlCRThCRDgwQzEwMEQxOS81My8/dXJsPScsbGlzdDEyLndhbmcsJ2h0dHBzOi8vdmlwLmFwaWh6LmNuL2FwaS9mdW4vZG91eWluLnBocD9pZD0xMDAwMTcyNyZrZXk9YzNkZDdjZjNhNmZjMDMwNmJhNmQ4YTg3MGVlNTAwYjQmdXJsPSddOyAvL2xvZyhsaXN0MTMpXG5cbi8vbG9nKGdldFZhcihcInNlbFwiLCBsaXN0MTNbMF0pKVxuZC5wdXNoKHtcbiAgICB0aXRsZTogJ+KAmOKAmOKAmeKAmTxzcGFuIHN0eWxlPVwiY29sb3I6IzA5OEFDMVwiPumAieaLqeaOpeWPo1x0PHNwYW4gc3R5bGU9XCJmbG9hdDpyaWdodFwiPuKAmOKAmOKAmeKAmTxmb250IGNvbG9yPVwiIzBhYTM0NFwiPicgKyBnZXRWYXIoXCJzZWxcIiwgbGlzdDEzWzBdKSArICc8L2ZvbnQ+JyxcbiAgICBjb2xfdHlwZTogXCJ0ZXh0XzFcIixcbiAgICB1cmw6IFwic2VsZWN0Oi8vXCIgKyBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIHRpdGxlOlwi5o6l5Y+jXCIsXG4gICAgICAgIG9wdGlvbnM6IGxpc3QxMyxcbiAgICAgICAgY29sOiAxLFxuICAgICAgICBqczogJC50b1N0cmluZygoKSA9PiB7XG4gICAgICAgICAgICBwdXRWYXIoXCJzZWxcIiwgaW5wdXQpXG4gICAgICAgICAgICByZWZyZXNoUGFnZSgpXG4gICAgICAgICAgICByZXR1cm4gXCJoaWtlcjovL2VtcHR5XCJcbiAgICAgICAgfSlcbiAgICB9KVxufSk7XG5hZGRMaXN0ZW5lcihcIm9uQ2xvc2VcIiwgJC50b1N0cmluZygoKSA9PiB7XG4gICAgY2xlYXJWYXIoXCJzZWxcIilcbn0pKVxuZC5wdXNoKHtcbiAgICB0aXRsZTogJ+ino+aekCcsXG4gICAgZGVzYzogJ+ivt+WwhuinhumikS/lm77niYfpk77mjqXnspjotLTlnKjmraTlpIQnLFxuICAgIHVybDogJC50b1N0cmluZygoKT0+e1xuICAgICAgICAvL2xvZyhpbnB1dClcbiAgICAgICAgaWYoaW5wdXQuaW5jbHVkZXMoJ+aKlumfsyd8fCflv6vmiYsnKSl7XG4gICAgICAgIHB1dE15VmFyKCdsaWFuamllJyxpbnB1dC5tYXRjaCgvKGh0dHAuKj8pXFxzLylbMV0pXG4gICAgICAgIH1lbHNle1xuICAgICAgICBwdXRNeVZhcignbGlhbmppZScsaW5wdXQpXG4gICAgICAgIH1cbiAgICAgICAgcmVmcmVzaFBhZ2UoKVxuICAgICAgICByZXR1cm4gJ2hpa2VyOi8vZW1wdHknXG4gICAgfSksXG4gICAgY29sX3R5cGU6J2lucHV0JyxcbiAgICBleHRyYToge1xuICAgICAgICB0eXBlOiAndGV4dGFyZWEnLFxuICAgICAgICBoZWlnaHQ6IDJcbiAgICB9XG59KVxuXG4vL2xvZyhnZXRNeVZhcignbGlhbmppZScpKVxuaWYoZ2V0TXlWYXIoJ2xpYW5qaWUnKSAhPSAnJyl7XG52YXIgaHRtbDIxID0gcmVxdWVzdChnZXRWYXIoXCJzZWxcIiwgbGlzdDEzWzBdKStnZXRNeVZhcignbGlhbmppZScpKTsgLy9sb2coaHRtbDIxKVxudHJ5e1xudmFyIGRhdGEyMSA9IEpTT04ucGFyc2UoaHRtbDIxKTsgLy9sb2coZGF0YTIxKVxuaWYobGlzdDEzWzZdLmluY2x1ZGVzKGdldFZhcihcInNlbFwiLCBsaXN0MTNbMF0pKSl7XG4gICAgaWYoZGF0YTIxLnRpdGxlKXtcbiAgICBkLnB1c2goe1xuICAgICAgICB0aXRsZTogZGF0YTIxLnRpdGxlLFxuICAgICAgICB1cmw6ICdoaWtlcjovL2VtcHR5JyxcbiAgICAgICAgY29sX3R5cGU6ICd0ZXh0XzEnXG4gICAgfSlcbiAgICB9XG4gICAgaWYoZGF0YTIxLmNvdmVyKXtcbiAgICBkLnB1c2goe1xuICAgICAgICBpbWc6IGRhdGEyMS5jb3ZlcixcbiAgICAgICAgdXJsOiBkYXRhMjEuY292ZXIrJy5qcGcnLFxuICAgICAgICBjb2xfdHlwZTogJ3BpY18xX2Z1bGwnXG4gICAgfSlcbiAgICB9XG4gICAgaWYoZGF0YTIxLnZpZGVvKXtcbiAgICBkLnB1c2goe1xuICAgICAgICB0aXRsZTogJ+inhumikScsXG4gICAgICAgIHVybDogZGF0YTIxLnZpZGVvKycjaXNWaWRlbz10cnVlIycsXG4gICAgICAgIGNvbF90eXBlOiAndGV4dF8xJ1xuICAgIH0pXG4gICAgfVxuICAgIGlmKGRhdGEyMS5pbWFnZXMubGVuZ3RoID4gMCl7Ly82XG4gICAgZC5wdXNoKHtcbiAgICAgICAgdGl0bGU6ICflm77pm4YnLFxuICAgICAgICB1cmw6ICQoJ2hpa2VyOi8vZW1wdHkjI2dhbWVUaGVtZSMnKS5ydWxlKCgpPT57XG4gICAgICAgICAgICAvL2xvZyhNWV9QQVJBTVMucGljcylcbiAgICAgICAgICAgIHZhciBkID0gW11cbiAgICAgICAgICAgIHZhciBwaWNzID0gTVlfUEFSQU1TLnBpY3NcbiAgICAgICAgICAgIHBpY3MuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgICAgICBkLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBpbWc6IGl0ZW0sXG4gICAgICAgICAgICAgICAgICAgIHVybDogaXRlbSxcbiAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6ICdwaWNfMV9mdWxsJ1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgc2V0UmVzdWx0KGQpXG4gICAgICAgIH0pLFxuICAgICAgICBjb2xfdHlwZTogJ3RleHRfMScsXG4gICAgICAgIGV4dHJhOiB7XG4gICAgICAgICAgICBwaWNzOiBkYXRhMjEuaW1hZ2VzXG4gICAgICAgIH1cbiAgICB9KVxuICAgIH1cbn1cbmlmKFtsaXN0MTNbMF0sIGxpc3QxM1szXSwgbGlzdDEzWzRdXS5pbmNsdWRlcyhnZXRWYXIoXCJzZWxcIiwgbGlzdDEzWzBdKSkpe1xuICAgIGlmKGRhdGEyMS5kYXRhLmRlc2Mpe1xuICAgIGQucHVzaCh7XG4gICAgICAgIHRpdGxlOiBkYXRhMjEuZGF0YS5kZXNjLFxuICAgICAgICB1cmw6ICdoaWtlcjovL2VtcHR5JyxcbiAgICAgICAgY29sX3R5cGU6ICd0ZXh0XzEnXG4gICAgfSlcbiAgICB9XG4gICAgaWYoZGF0YTIxLmRhdGEuY292ZXIpe1xuICAgIGQucHVzaCh7XG4gICAgICAgIGltZzogZGF0YTIxLmRhdGEuY292ZXIsXG4gICAgICAgIHVybDogZGF0YTIxLmRhdGEuY292ZXIrJy5qcGcnLFxuICAgICAgICBjb2xfdHlwZTogJ3BpY18xX2Z1bGwnXG4gICAgfSlcbiAgICB9XG4gICAgaWYoZGF0YTIxLmRhdGEucGxheUFkZHIpe1xuICAgIGQucHVzaCh7XG4gICAgICAgIHRpdGxlOiAn6KeG6aKRJyxcbiAgICAgICAgdXJsOiBkYXRhMjEuZGF0YS5wbGF5QWRkcisnI2lzVmlkZW89dHJ1ZSMnLFxuICAgICAgICBjb2xfdHlwZTogJ3RleHRfMSdcbiAgICB9KVxuICAgIH1cbiAgICBpZihkYXRhMjEuZGF0YS5tdXNpYyl7XG4gICAgZC5wdXNoKHtcbiAgICAgICAgdGl0bGU6ICfpn7PpopEnLFxuICAgICAgICBpbWc6IGRhdGEyMS5kYXRhLmNvdmVyLFxuICAgICAgICB1cmw6IGRhdGEyMS5kYXRhLm11c2ljKycjaXNNdXNpYz10cnVlIycsXG4gICAgICAgIGNvbF90eXBlOiAndGV4dF8xJ1xuICAgIH0pXG4gICAgfVxuICAgIGlmKGRhdGEyMS5kYXRhLnBpY3Mpey8vMFxuICAgIGQucHVzaCh7XG4gICAgICAgIHRpdGxlOiAn5Zu+6ZuGJyxcbiAgICAgICAgdXJsOiAkKCdoaWtlcjovL2VtcHR5IyNnYW1lVGhlbWUjJykucnVsZSgoKT0+e1xuICAgICAgICAgICAgLy9sb2coTVlfUEFSQU1TLnBpY3MpXG4gICAgICAgICAgICB2YXIgZCA9IFtdXG4gICAgICAgICAgICB2YXIgcGljcyA9IE1ZX1BBUkFNUy5waWNzXG4gICAgICAgICAgICBwaWNzLmZvckVhY2goaXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgZC5wdXNoKHtcbiAgICAgICAgICAgICAgICAgICAgaW1nOiBpdGVtLFxuICAgICAgICAgICAgICAgICAgICB1cmw6IGl0ZW0sXG4gICAgICAgICAgICAgICAgICAgIGNvbF90eXBlOiAncGljXzFfZnVsbCdcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIHNldFJlc3VsdChkKVxuICAgICAgICB9KSxcbiAgICAgICAgY29sX3R5cGU6ICd0ZXh0XzEnLFxuICAgICAgICBleHRyYToge1xuICAgICAgICAgICAgcGljczogZGF0YTIxLmRhdGEucGljc1xuICAgICAgICB9XG4gICAgfSlcbiAgICB9XG4gICAgaWYoZGF0YTIxLmRhdGEuYXRsYXMpey8vM1xuICAgIGQucHVzaCh7XG4gICAgICAgIHRpdGxlOiAn5Zu+6ZuGJyxcbiAgICAgICAgdXJsOiAkKCdoaWtlcjovL2VtcHR5IyNnYW1lVGhlbWUjJykucnVsZSgoKT0+e1xuICAgICAgICAgICAgLy9sb2coTVlfUEFSQU1TLmF0bGFzKVxuICAgICAgICAgICAgdmFyIGQgPSBbXVxuICAgICAgICAgICAgdmFyIHBpY3MgPSBNWV9QQVJBTVMuYXRsYXNcbiAgICAgICAgICAgIHBpY3MuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgICAgICBkLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBpbWc6IGl0ZW0sXG4gICAgICAgICAgICAgICAgICAgIHVybDogaXRlbSxcbiAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6ICdwaWNfMV9mdWxsJ1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgc2V0UmVzdWx0KGQpXG4gICAgICAgIH0pLFxuICAgICAgICBjb2xfdHlwZTogJ3RleHRfMScsXG4gICAgICAgIGV4dHJhOiB7XG4gICAgICAgICAgICBwaWNzOiBkYXRhMjEuZGF0YS5hdGxhc1xuICAgICAgICB9XG4gICAgfSlcbiAgICB9XG4gICAgaWYoZGF0YTIxLmRhdGEuaW1hZ2VzKXsvLzRcbiAgICBkLnB1c2goe1xuICAgICAgICB0aXRsZTogJ+WbvumbhicsXG4gICAgICAgIHVybDogJCgnaGlrZXI6Ly9lbXB0eSMjZ2FtZVRoZW1lIycpLnJ1bGUoKCk9PntcbiAgICAgICAgICAgIC8vbG9nKE1ZX1BBUkFNUy5pbWFnZXMpXG4gICAgICAgICAgICB2YXIgZCA9IFtdXG4gICAgICAgICAgICB2YXIgcGljcyA9IE1ZX1BBUkFNUy5pbWFnZXNcbiAgICAgICAgICAgIHBpY3MuZm9yRWFjaChpdGVtID0+IHtcbiAgICAgICAgICAgICAgICBkLnB1c2goe1xuICAgICAgICAgICAgICAgICAgICBpbWc6IGl0ZW0sXG4gICAgICAgICAgICAgICAgICAgIHVybDogaXRlbSxcbiAgICAgICAgICAgICAgICAgICAgY29sX3R5cGU6ICdwaWNfMV9mdWxsJ1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgc2V0UmVzdWx0KGQpXG4gICAgICAgIH0pLFxuICAgICAgICBjb2xfdHlwZTogJ3RleHRfMScsXG4gICAgICAgIGV4dHJhOiB7XG4gICAgICAgICAgICBwaWNzOiBkYXRhMjEuZGF0YS5pbWFnZXNcbiAgICAgICAgfVxuICAgIH0pXG4gICAgfVxuICAgIGlmKGRhdGEyMS5kYXRhLnRpdGxlKXtcbiAgICBkLnB1c2goe1xuICAgICAgICB0aXRsZTogZGF0YTIxLmRhdGEudGl0bGUsXG4gICAgICAgIHVybDogJ2hpa2VyOi8vZW1wdHknLFxuICAgICAgICBjb2xfdHlwZTogJ3RleHRfMSdcbiAgICB9KVxuICAgIH1cbiAgICBpZihkYXRhMjEuZGF0YS5pbWFnZSl7XG4gICAgZC5wdXNoKHtcbiAgICAgICAgaW1nOiBkYXRhMjEuZGF0YS5pbWFnZSxcbiAgICAgICAgdXJsOiBkYXRhMjEuZGF0YS5pbWFnZSsnLmpwZycsXG4gICAgICAgIGNvbF90eXBlOiAncGljXzFfZnVsbCdcbiAgICB9KVxuICAgIH1cbiAgICBpZihkYXRhMjEuZGF0YS52aWRlbyl7XG4gICAgZC5wdXNoKHtcbiAgICAgICAgdGl0bGU6ICfop4bpopEnLFxuICAgICAgICB1cmw6IGRhdGEyMS5kYXRhLnZpZGVvKycjaXNWaWRlbz10cnVlIycsXG4gICAgICAgIGNvbF90eXBlOiAndGV4dF8xJ1xuICAgIH0pXG4gICAgfVxufVxuaWYoW2xpc3QxM1sxXSwgbGlzdDEzWzJdLCBsaXN0MTNbNV1dLmluY2x1ZGVzKGdldFZhcihcInNlbFwiLCBsaXN0MTNbMF0pKSl7XG4gICAgaWYoZGF0YTIxLnRpdGxlKXtcbiAgICBkLnB1c2goe1xuICAgICAgICB0aXRsZTogZGF0YTIxLnRpdGxlLFxuICAgICAgICB1cmw6ICdoaWtlcjovL2VtcHR5JyxcbiAgICAgICAgY29sX3R5cGU6ICd0ZXh0XzEnXG4gICAgfSlcbiAgICB9XG4gICAgaWYoZGF0YTIxLnRodW1ibmFpbCl7XG4gICAgZC5wdXNoKHtcbiAgICAgICAgaW1nOiBkYXRhMjEudGh1bWJuYWlsLFxuICAgICAgICB1cmw6IGRhdGEyMS50aHVtYm5haWwrJy5qcGcnLFxuICAgICAgICBjb2xfdHlwZTogJ3BpY18xX2Z1bGwnXG4gICAgfSlcbiAgICB9XG4gICAgaWYoZGF0YTIxLm1lZGlhcyl7XG4gICAgZGF0YTIxLm1lZGlhcy5mb3JFYWNoKGl0ZW0gPT4ge1xuICAgICAgICB2YXIgdHlwZSA9IGl0ZW0udHlwZSA9PSAndmlkZW8nID8gJyNpc1ZpZGVvPXRydWUjJyA6ICcnXG4gICAgICAgIGQucHVzaCh7XG4gICAgICAgICAgICB0aXRsZTogaXRlbS5xdWFsaXR5LFxuICAgICAgICAgICAgdXJsOiBpdGVtLnVybCt0eXBlLFxuICAgICAgICAgICAgY29sX3R5cGU6ICd0ZXh0XzEnXG4gICAgICAgIH0pXG4gICAgfSlcbiAgICB9XG59XG59Y2F0Y2goZSl7XG4gICAgbG9nKGUubWVzc2FnZSlcbiAgICB0b2FzdChodG1sMjEpXG59XG59XG5cbnNldFJlc3VsdChkKSIsInNlYXJjaF91cmwiOiIiLCJncm91cCI6IuKRoOaOqOiNkCIsInNlYXJjaEZpbmQiOiIiLCJkZXRhaWxfY29sX3R5cGUiOiJtb3ZpZV8xIiwiZGV0YWlsX2ZpbmRfcnVsZSI6IiIsInNkZXRhaWxfY29sX3R5cGUiOiJtb3ZpZV8xIiwic2RldGFpbF9maW5kX3J1bGUiOiIiLCJ1YSI6Im1vYmlsZSIsInByZVJ1bGUiOiIiLCJwYWdlcyI6IltdIiwiaWNvbiI6ImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBSW9BQUFDS0NBWUFBQUIxaDlKa0FBQUFBWE5TUjBJQXJzNGM2UUFBQUFSelFrbFVDQWdJXG5DSHdJWklnQUFCUW1TVVJCVkhpYzdaMWJiQnZaZWNmLzU1d1pja2lLcENWS3R1N3lOYnZyZUpOZ3ZSc0VSVGFMTHBvZ1RacVhidlBRXG5oNkpwODFBVWVTelNCdWhUVVNCTmdmYXQ2U1lvK3Q0aUtKRGFTZHlOdlpabFNiNnQ1VmdYU3pJc1d6ZExzaTRVU1Ezdk0rZWNQcER5XG5hdTJoektzMEpPY0hDQ05xeEptUDVKL2Y5NTF6dm5NTzRPRGc0T0RnNE9CZ1A4aGhHd0NBQWFENUkwUE9KaVYvanVZZk00dm4wUU94XG5ydm9JaThmeWhkL04vSkhuLzhielA0ZkdRUWlGQW1EZDNkMnFxcXBCem5rSGt6TEUzTzVXd25rM3BiUlRVbnFNRXRKT2dBQ0FvT3B5XG5CUW5nSVlTNHBaUXVLYVZHQ0lHVXVmZFRDS0ZJS2V0U0tJUVFRU2sxOTd3ZVNRakpNRW9OSVdWR0FzbHNKaE1ERUpQQURxVGM0a0tzXG5FMkJORUxKR09JOWtPTjhpaElRNTU5SFYxVlVEbndxcWRuYlg4TnF1L21EUUp3T0JIcS9iZlZZSzhUb0lPVUVJT1U0cEhTQ0VkRWtwXG50UnJlditHZ2xLYUZFR3RTaUVVdTVRSWpaRjVJK1RDWnlVenJ1djYwcDZjbk1UMDluYTNGdldzaEZIZDdlM3ViMytONVU5TzBid25nXG5QQ1drTHk4TVZ3M3UxN1FRUXJJQTFyZ1F5eTVWdlIvWDlZdnhkSHBpYzNOekcwQlZCVk5Wb1hTMnRIU3dscFp6b2ZiMnZ6S3kyWGNKXG5JVzJPMXpnd01vU1FzS0lvd3p1eDJJZmhXT3lCcnV0YjFicTRWWkpZS2dTQTF0blorVnBiZS92M1d2eitmekd5MlhjQStQRnBVdXBRXG5leFFBZmlIRU9ZL0g4MjJmendlbUtPRkVJckdES2lUQ0ZRbmx1OS85THR2WTJPanM3K241cHMvbit3Y3A1WjhKenIyVkd1VlFHVUlJXG5Id0hlYTJ0dGZhdkY1OXZ4dGJTRWQzWjJrdmkwZFZVeWxRaEZpY1ZpcDFyOS91K3BMdGZmY3M3ZmhEMmEydzQ1aUdtYXZTNlg2OHVFXG5FS1o1UEU5MVhZK2h6TlpSdVVKUlE2SFFtYURmLzBOS3lGOElLWStWZVIySEdpT0VDREpDdnNnbzlXc2V6Nk55eFZLT1VOUzJ0cll6XG4zWjJkL3d3cC93U0VPS0hHL21pVTBpLzZmTDQreXRoNFBCNlBva1N4bENTVTgrZlBxOFEwengwOWV2VEhuUFB2b0g1N1I1c1JKb1Y0XG5vOFhyUGE2NjNWUDVGbEhSWWlsRktJeFNldExmMHZJM0FENkFJNUs2UkVwNWtsSHE4WGk5RDNSZGo2TElCTGRZb1pCUUtOUjFKQkQ0XG5TMHJJbnp2aHBxNmhqTklUS21OcGo4LzNjR2RuSjE3VWs0cTh1RHZVMnZxK29pamZCeUZIS2pEU3dRWkk0SWpMNWZxK1Q5TitINEM3XG5tT2NVNVZGNmUzdlBCdjMrZnpRTjQ0MktMSFN3RFVKS3Y2S3F4eWhqby9GNGZQTlYvLzlLb1J3N2R1eG93T3Y5bmhEaVQrSDBrelFVXG5Vb2crajhzVlNXVXkwNFpoSlBiNzMzMUR6OW16WjExdVJYbFRkYnQvQUVja2pRaFJYYTRmaEVLaEwrQVZJZWhWSHFXakl4VDZlOU0wXG4zNm1lYlE1MlFnamg4WGs4TGk3bDlXUXlXVEN4M2MranVGbzA3UXVHWWJ4YkEvc2NiSVJobXU5NnZkNXpaOCtlTFZnR1VsQW8vY0dnXG56K2YzL3hFaEpGUWI4eHhzZzVSdFBvL24yeXNySzc1Qy8xSklLRlJxV2c4M2pDOUpLWXRxUGpuVU5ab3d6YmVDd1dBM0NtaWlrRkNZXG4zKzgvU3lqdHE1MXREbmFDTXRibll1d3NDdVN0bGtMcDdlMVZPQ0d2RVVLNmFtcWRnMzBncElzcHltc0FWS3ZUaFR4S214VGlsQkRDXG5DVHZOZ3BSdUtjU3BnWUdCb05WcFM2R29RSWdRY3J5MmxqbllEY0xZQUUrbE9xek9XUXBGTUJaaWpQWFgxaXdIdThHQUFlYnhXTFp5XG5MWXVmWFl5MUFlaXVxVldIQ0tVVWhCRHNUc0lxNWNoNXJrNTVkekphUTBGcE53UGFyRTVaQ2tWdzNpVVZwU0h6RTFWVmNmVG9VYlMyXG50WUZSQ2hBQ1NGblVNWnZOWWpzY3h2YjJOZ3pET095WFVuV2tFQnFsdE5QcW5KVlFHRkdVaG0zdEJBSUJmTzI5OTNEK25YZmc4WGhLXG44aWl4YUJRanc4TzRNVHFLV0N4MjJDK2xKc2hjSkdGNFlZcUh0VkNBOWdPeDZoRFFOQTNIVDV6QTIyKy9EWit2WUVla0pSdnI2NWlmXG5uNGZxYXR3Smo0VFNEdVJ5MTFjS2hkSkc3clluQkM2M0cxNnZ0MlNoZUwxZXVGUVZsRFp1RlNnaHBBMDVqL0taMkdyMWlobUExb013XG42akFnUUM3bktJTUdURjlmZ3VZKys1ZDZaNjJFUWlnaExiVTM2WENRUUM1QkxRTkNTRE9JSlFDTDJpUExIRVZ4dVZyTUJzenFkNUZDXG5RT1IvTE0vbkU5Z1g0WndEVWpabTB6aVAyK1VLd3NLaldBbUZNRXE5WnUxdE9oU3ltUXhXVjFZdy9lQUJ2RjR2SkhKZm40S3RuVDNuXG5JNUVJMWpjMllKcU4rdTRBRXZCWS9iMVFxNmRobDZyUWRSM1hoNGJ3Y0hZV2pMR1MrbEV5NlRUVzF0YVFpQmMxdzZGZThjSWlKYkhzXG5jT01Odk9CTk9wM0dreWRQTUQ4L1gzTFBMSkFMUDQwY2VxU1VDb3JNVWFnVW9xSFhOV25rMEZFcGhGSVZGcnF3YlBXZ2dVT1B3LzRJXG5JWW92WEdwazErcXdQMWF0UGFEUTBsbGw5alBVQTRRUWFKb0d6ZU9Cd3BobDYyYjM5WCttTlFSQUNJRjBLb1YwT2wyd2FWM3ZGSElTXG5sa0pwWkkvaWRydHg2dlJwbkR0M0RpMHRuL1lyN2sxWUN6Mk94K09ZblozRnc5bFpKSlBKQTdYN29DamtJZ29sczVaMWs0MkFXOU53XG43czAzOGNFSEg2Q3JxNnVrVnMvbTVpWXVYTGlBNWVYbGhoVUs1OXlGWXB2SFVzcUdqVDJNVW1pYWhpT3RyV2dMbFRiMmFaZ212QjVQXG5RdzhLRnFMcFhuRWxZWldnT1FZR3JXZzZvUlRLNm90aE4rRnRScHBPS0pWNmxHYWw2WVJTcVVkcFZwcE9LQlY1bE9hb1I3R2s2WVJTXG5rVWVSc21uRFQ5TUp4Y2xSeXFQcGhPTGtLT1hSZEVKeCtsSEtvK21FNHZTamxFZlRDY1hKVWNxakxpdlpDQ0Zsajdjb0xoZVlvcFRuXG5XUWlCb2loUUdNdlYyNWFCRUtJdVIrZnJVaWorUUFCOWZYMElCbk5ydnV6OTBGOE1EeTgrYm0xdHhldWYreHk4M3RLWDgvZDZ2VGgxXG4ralMrL0pXdllITmpvNmo3UGE5elFhNndlMmx4TVRkdnVjN0VVcGRDYWZINThQWTc3K0RkcjMwTm10dGRrbmR3dTkxbzcraUF2NlgwXG5PVzVlcnhkdm5UK1AzdDVlcE5QcG9wOG5wWVJoR0JnZEhVVTBFa0VzR2kzNTNvZE5YUXBGMTNVOFcxdERXMnNyVHA0NkJkY0JUUnBuXG5qQ0VVQ2lGVVFubUNsQktjY3l6TXoyTnpmYjB1UlFMVWFUSWJqOGZ4eVowNytQWEZpd2h2YmRtK0xER3l2WTMvdTNRSk4yL2VoSzdyXG5oMjFPV2RTbFVLU1VpRWFqdURZMGhKdTNidG02Mml5WlRPS1R1M2N4ZVBVcXd1RndYU2F5UUowS0JjaTFIcDR1TDJQdzQ0L3hZR3JLXG5saXNnR1lhQmh3OGY0dVBMbDdHNHVQaDhXYTk2cEc2RkFnRFpiQlpUazVNWXZuNGRLMCtmMnVyYktvVEFzMmZQTURvOGpNbUpDYVJTXG5xY00ycVNMcU1wbmRSVXFKY0RpTTBkRlI5UFgzb3kwVVFpQVFPR3l6QUFDSlJBTDN4c1l3T2pLQzlmVjFXNG00SE9yYW93QzU2YUdMXG5Dd3Y0K01vVlRJeVAyMks2S09jY005UFRHTHg2Rlk4ZVBiSmxXQ3lWdWhjS2tKdDRQanN6ZzJ1RGcxaFpXVG5VYjYrVUVxdXJxN2grXG4vVG9teHNkTDZtK3hNM1VkZXZZU2lVVHd5U2VmNE5UcDB3Z0VBZ2dFQW1WM3M1ZUR6Qyt3RTRsRWNQdldMZHk2ZVJOYlcxdDFIM0oyXG5hUWlQQXVUYy9lcktDbTZNakdCcWFnckpaUExBKzFkU3FSUm1aMll3TkRTRTVlVmxXNFRCYXRFd0hnWElmVkNUazVQbzdldkQwYU5IXG5jZkxreWVjclZOY2EwelN4c2I2T0c2T2ptQndmYjdqRmRocEtLRUlJYkc1dVltUjRHUDBEQTJodGJVVjdlMjdKM0ZxS1JRZ0JYZGN4XG5QajZPR3pkdVlDTS9ZTmhJTkV6bzJVVktpYVhsWlZ5NWNnWGo0K00xNzdXVlVpS1R5ZURCMUJRdWYvUVI1cDg4cWVuOURvdUdFd29BXG5HTmtzWm1kbU1EbzhqTVdGaFpvMlR6bm5lTHE4akpHUkVVeE1URFJFVTlpS2hoUUtBTVNpVVl6ZHZZdmJ0MjhqRW9uVUxMR05ScVA0XG41TTRkM0xweEE1RklwR0ZhT1MvU3NFSVJRbUI1ZVJuRFEwT1ltcHhFTnB1dCtqMTJQZGZnNENDV2xwWnNQNHBkQ1EwckZDQTNLRGM5XG5QWTJoYTlld3VycGExUTlTQ0lHTnpVME1YYnVHQjFOVHlHUXlWYnUySFdsb29VZ3BFWS9ITVRnNGlHdURnOWlKeGFvU0dxU1VTTVRqXG5HTHg2RlZjdVgyN1lMVm4yMHRCQ0FmSzFLNUVJTGw2NGdOL2R1NGRFSWxIeDlWS3BGQ1ltSnZDckN4ZXd2YjNkc0huSlhocGVLRUN1XG5aZko0Ymc2WExsM0NvMGVQS3NwWERNUEE0OGVQY2VuU0pjdytmTml3clp3WGFhZ090LzB3VFJPM2J0NUVkMDhQUW0xdDZPbnRMWGtzXG5TQWlCOWZWMWpJNk1ZSFJrcENZSnNsMXBHcUVBd1BiMk5rWkhSakF3TUlCQU1JaGdNRmgwajYyVUVycXVZMkppQWlQRHc5amEzS3k3XG5LUmVWMEJTaFp4Y2hCQmJtNTNGOWFBZ3pNek13VGJPby9HSjN1c1hjM0J5R3IxL0g0N201dWk1ckxJZW04aWhBZnVCd1lnTGRQVDNvXG43KzlIWjJmbkswT1FsQkpibTVzWUhSbkIrUDM3ZFZ0Slh3bE41VkdBbkZjSmIyL2p6dTNidURjMmhyaXU3K3RWaEJDNVN2bzdkM0Q3XG4xaTJzUDN2V0ZLMmNGNms3b1ZSakZEaWJ5V0J4Y1JHRFY2OWlibTRPNlZUSzhzUGZEVG56OC9PNGV2VXFuangrakV3bVUvSHlYdldJXG43VU1QSVFTK2xoYTB0cmJtUW9TVUVFSWdua2dnVW1ZZmhwUVN5VVFDZCsvZVJYZDNOd0xCSUFZR0JsNmFjY2c1eDlyYUdvWUdCekYyXG45eTdpOFhoRklnbUZRdkQ1ZktENU5maWxFSWhFbzBqRTQ3YnYvcmU5VU54dU4xNS8vWFg4NGJlK0JZL0hBMEpJcnNOcmZCeS91bml4XG43Q295SVFTMncyRmN1M1lOdlgxOUNBUUM2T2pvZUw1S3d1NkcyT1AzNytQeWIzK0xhRFJhOFlmNWUxLzlLdDQ2Zng2YTI1M3IzVTBrXG5NRFEwaE4rTmpWWGNFVmhyYkM4VVJWSFEzOStQUC9qNjE1ODNaM1ZkaCtBY2wzN3ptNHJLRFlVUVdGeFl3UFdoSWZUMjlpSVlETUtkXG5uL1NleldZeFB6K1BqNjljd1pNblQ2cnlqVC83K2Mvakc5LzRCdngrUHpqbmlFYWpXRjVhd3ZUVWxPMkZZcG1qRUVKc2s2M3RsaktxXG5xZ3JHR0ZSVmZiNCtTYUhkUkV1QmM0N0p5VW1NREE4L24wUW1oTUQ2czJlNFBqU0U4ZnYzcTlZVXBydnJxeWhLN25Vb1N0MnNxMi9sXG5VUVJsek9DbWFZdDlCZmVLNGFWMVVGN1lLcVZjWXRFbzd0eStqUk1uVDZMajZGRW9pb0t4c1RIY3ZuVUwyOXZiRlY5L2wzcElZeWxqXG5XUUF2dVUvYjc5ZFRTQXpWRWdtUTY5NWZXbHJDbFN0WGNQekVDU2lNUFE4NTFleFkyeFUzOElMbzdmUitGL2k3cFZEczFvU3pFa1UxXG53czVlVXFrVUhreE40WDkvK1VzUVFqQisvMzdWNXdzLzMyRU1ueFdIbmQ3dlFwSzFUbVp0cEhEQVdoUldXODFXZW85WU5JckxIMzBFXG5LV1ZOdG9QYjYxSHNTa2w3Q2pMR3N2bWRvQTZkUXA2am1pTFplODFhdGo3MmVoVEF0cUl4WVpHaldLWGNYRXBwbS9Iemc4aFJEb29YXG5jeFNyTUhUWWtCS0VJaW1sdGlvQWZVa1VoQUJWemxFT2drTGlzTlBySUlSWVp1OVdvWWNMS1cwMUJmL0Y4RU1JZ2N2dGhxWnBSVzhjXG5lZGhIU2lsVVZiVi92NG1VU1JUYlBDYUFiWllIc3NwUk5FM0Q2ZE9uOGY3Nzd5T1NYMlhSRG1MWTcrajFlbkhtekJtNDNlN0RlQnVMXG5SZ0JKV0RSK0xEMUtPcE9KVTV1NFE2dGNSRkVVdlA3R0cvamhqMzVrKzhHMFhTaWw4SHE5ejJ0ZjdOcVBZbVN6TVFBdmhSOHJvVWhJXG5HYmZUYnVwV20xV3Jxb29qUjQ0Y29sV1ZZZGNjQmNBT0xEeUtaYXNIUUtUbTVwUkF0VHZYSFBZbGdsekw1ek5ZanZWSUtjTzF0NmM0XG5wSlFRVWlLYnpjSXdqT2VEaEllZGMxUjY1SnpETUF4d3ptMjFCeENYY2h2RjVpaGNpSzJEWE5acVA0UVFpRVdqZVB6NGNhN29oOUtYXG5QRXloRDhQTzV5RWxkbUl4UktKUmNEdXR6Q1RFSm9DWEppdFpDZ1hBV3MwTktwSk1Kb09wcVNsOCtOT2ZRbEdVM0tCVnZoK2xubzlTXG5TcGltaVpXblQyMjFCaTBYWWcxRmVoUklJZFlJSVdrcHBWWnp5MTRCNXh6aHJhM25tdzNZSVd4VTZ5aWtCRGROMjB6OUlKUm1DR09XXG5Uc0pTS0J5SUNDblhDSENpdHFZVkIrZmNObTltSTBPa1hCRkNXT2FubHQyRTFEVERrSEtwdG1ZNTJBMlQ4MFhPK1piVk9VdWhDRVhaXG40RUlzMU5Zc0I3c2hwVndFWUZuU1p5a1V3ekJpbE5MSGhCQmJEUTQ2MUE1Q1NJWlErb1J6YnJuemxLVlF1cnE2REc2YU14SllyYTE1XG5EblpCQW11TTBvZXJxNnVXNjNoWUNtVnNiSXhuT1o4UlFqeXRyWGtPZGtFSXNheEhvOU93R09jQkNrOHBGYkZZYkZXaDlCNEFXNVVjXG5PRlFmUWtoR1pldytTYWRYWUZGaUFPd3o5emdXaXlYMFZPclhJS1I2OHhVY2JJbVVNcHhJSkg2MUZJc1ZyQVBkcjRvbW0wd21wMVJGXG5HYTZCYlE0MlFuRzVSdUxwOUFTQWdpV3crNVpiYlcxdGJVZDEvVDlWVmJYVmFMSkQ5VkFVWlR1MnMvTWZIUjBkKzBhT1Y0MzhjZE0wXG5FMzZ2bDRDUWQxRWZrOTBjaWtlYWh2R3ZpVlRxNHNMQ3dzNSsvL2pLSVdMRE1CS0t5N1hSNHZOOVNRclJYejBiSFE0YnQ2YmQwYVBSXG5INit1cjcreWM3V29TbDlOMHg2bnM5bWZLNHc1L1NvTkFxVjBOWmxJL1B2U3MyZEZiUWRTVk5GSk5CcmxYcTkzaXhGQ0thVmZCSERvXG5vOG9PRlJIbFF2d3NISW44SXBWS0ZaVi9GbDJkdExPemszUjdQQ3VNMGhCajdFM1U0YkplRGdBQVV3angzM295K2VGNzc3MjNORDA5XG5YVlIxZWlsbGJGTFg5UjNONDFudytYejlRb2pQbFdtb3d5R2lxT3FscUs3L1pIVjE5ZUgwOUhUUnBYV2wxanNLWGRmRGxMRjdMVjd2XG5jUUFuNFhpV2VzRlVWUFhTeXRyYTMyMXNiTXpBb3R4eFA4b3BqQlh4ZUR5cXVGd1BtS0s0R1NFbjRPUXNkaWNxaFBpdldEeitrNDJOXG5qVm1VS0JLZ1BLRUFlYytpYWRxMG9paEpsNnFlRkVJRXk3eVdRdzFSRk9VcEYrSm44V1R5d3pObnpqeGNXRmdvcTVLN2tsSjdvZXQ2XG5sRkE2cXpFMjUvSDVla3pUN0lIVEtXY1hKRldVVWRNdy9ta3JFdm1mOWZYMTVZV0ZoYkxyU2F2eG9aTGpnRHQxN05pWjFtRHdqMVZGXG4rWUZwbWgxVnVLNURtYmhjcnExTU52dHZ5WjJkWCtUN1NUSW92SmhTVVZUMTIrLzMrOXREUHQvbkE2SFFYeHVtK1M0QlFsSktlOC9LXG5iaHd5QU1LcXFnNkh3K0dmeCtMeHFYZzh2bG10aTljaVRMZzZPanJhV2pUdEN5MSsvM2V5aHZFbHhsZ2ZwT3lTVXRwaUZhZEdnUkNTXG5sVkt1QVZpV1V0N0xwTk8vMWxPcHlTTkhqbXpQemMxVnRZeTFsdm1FS3hnTSt2eCtmNi9YN1Q1TENYbE5TSG1DRW5LQ010WlBDT2tTXG5Raml0cFJMSXo3VmFrMElzQ1NubkllVThvWFEybWNsTWs1MmRsWHc5U1UxV3l6cUl4Sk9lUDMrZXJZMk5xUzI5dmEzSmJEYms5bmhDXG5FbWdsbEhZRDZHU01IWU9VN1pTeG9CUWk0SEs3anhBcFBZUlNMYitXbkFxQTdFNmFFa0tva0xKZWsyYkpGTVhBM3VtbGhHUUprQ0ZBXG5SZ0FwTTV1Tnl0eXFBakV1NVJZQjFrM1RmRVlZVytXWlRNUUV0aFZGMlRBTUk1YXZjZVVvVUpsV0xlendaclA4RDBGdVFoclo4M2kzXG5NNC9pWlZ2dE1UbTZkS3hhSGh5NVpGTzg4SGhYQUx6QTh4d2NIQndjSEJ3Y21wci9COEt4TDFkejJBZjBBQUFBQUVsRlRrU3VRbUNDIiwicHJveHkiOiIifQ==