海阔视界规则分享，当前分享的是：小程序￥home_rule_v2￥base64://@直播H@{"last_chapter_rule":"","title":"直播H","author":"入戏","url":"hiker://empty##fyAll","version":36,"col_type":"text_3","class_name":"频道1&频道2","type":"live","class_url":"https://zf2629.neocities.org/live/live01.json&https://zf2629.neocities.org/live/live01.json","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar data = [];\nputMyVar('my',MY_URL.split(\"##\")[1])\ndata.push({\n    title: \"🔎\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    desc: \"搜索频道\",\n    col_type: \"input\"\n})\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(MY_URL.split(\"##\")[1])\nsetResult(data);","search_url":"hiker://empty##**","group":"直播","searchFind":"js:\nlet rule = JSON.parse(fetch(\"hiker://home@\" + MY_RULE.title))\nlet key = MY_URL.split(\"##\")[1];\nMY_URL = rule.url;\nvar data = [];\nconst {\n    renderLiveData\n} = $.require(\"hiker://page/tool\")\nrenderLiveData(getMyVar('my'), key)\nsetResult(data);","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"工具\",\"path\":\"tool\",\"rule\":\"function getReferer(url) {\\n    if (url.indexOf(\\\"gitee\\\") > 0) {\\n        return \\\"https://\\\" + url.split(\\\"://\\\")[1].split(\\\"/\\\")[0];\\n    } else {\\n        return null\\n    }\\n}\\n\\nfunction renderLiveData(url, filter) {\\n    try {\\n        let _d = [];\\n\\n        try {\\n            let html = request(url, {\\n                headers: {\\n                    Referer: getReferer(url)\\n                }\\n            });\\n            if (html.includes(\\\"<html>\\\")) {\\n                throw \\\"not xxx\\\";\\n            }\\n            const d1 = []\\n            try {\\n                if (filter != null) {\\n                    var lists = html.replace(/[\\\\S]*\\\\$|\\\\$\\\\$\\\\$/g, \\\"\\\")\\n                    var list = lists.split('\\\\n')\\n                } else {\\n                    if (html.indexOf('@@@') > -1) {\\n                        var conts = html.split('@@@');\\n                    } else {\\n                        var conts = html.split('$$$');\\n                    }\\n                    var lists = [];\\n                    var tabs = [];\\n\\n                    for (let i in conts) {\\n                        lists.push(conts[i].split('$')[1].split('\\\\n'))\\n                        tabs.push(conts[i].split('$')[0])\\n                    }\\n                    var  m=getMyVar('my');\\n                    var fold = getVar(\\\"fold#\\\"+m, \\\"0\\\");\\n                    \\n\\n                    for (let i = 0; i < 8; i++) {\\n                        _d.push({\\n                            col_type: \\\"blank_block\\\"\\n                        })\\n                    }\\n                    for (var i = 0; i < tabs.length; i++) {\\n\\n                        _d.push({\\n                           title:  fold== i ? '‘‘’’<strong><font color=\\\"#19B89D\\\">' + tabs[i] + '</strong></font>' : tabs[i],\\n                          \\n                            url: $(\\\"\\\").lazyRule((i,m) => {\\n                                putVar(\\\"fold#\\\"+m, i)\\n                                refreshPage();\\n                                return \\\"hiker://empty\\\"\\n                            }, i,m),\\n                            col_type: 'flex_button'\\n                        })\\n                    }\\n                    _d.push({\\n                        col_type: \\\"line_blank\\\"\\n                    })\\n     \\n\\n                    var list = lists[fold]\\n\\n\\n                }\\n            } catch (e) {\\n                var list = html.replace(/#EXTINF:-1 ,/g, '')\\n                    .replace(/#EXTINF:-1,/g, '')\\n                    .replace(/\\\\n#genre#/g, ',#genre#')\\n                    .replace(/#EXTINF:-1/g, '')\\n                    .replace(/group-title=\\\"/g, '')\\n                    .replace(/\\\\nhttp/g, ',http')\\n                    //.replace(/=/g, '')\\n                    .replace(/，#/g, ',#')\\n                    .replace(/\\\",/g, '/')\\n                    .replace(/ /g, '')\\n                    .split('\\\\n');\\n            }\\n            for (var i = 0; i < list.length; i++) {\\n                var r = {};\\n                var j = list[i].split(',');\\n                if (list[i].indexOf(\\\"#EXTINF\\\") == 0 &&\\n                    j.length == 3 && j[2].indexOf(\\\"http\\\") == 0) {\\n                    r.title = j[1].split('/')[j[0].split('/').length - 1];\\n                    r.url = j[2].replace(`\\\\n`, '').replace('\\\\r', '');\\n                    if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                        r.url = r.url + \\\"#isVideo=true#\\\";\\n                    }\\n                    d1.push(r);\\n                    continue;\\n                }\\n\\n                if (j.length < 2) {\\n                    continue;\\n                }\\n                r.title = j[0].split('/')[j[0].split('/').length - 1];\\n                if (filter != null && !r.title.includes(filter)) {\\n                    continue;\\n                }\\n                r.url = j[1].replace(`\\\\n`, '').replace('\\\\r', '');\\n                if (r.url.indexOf(\\\"http\\\") == 0 || r.url.indexOf(\\\"rtmp\\\") == 0 || r.url.indexOf(\\\"rtsp\\\") == 0) {\\n                    r.url = r.url + \\\"#isVideo=true#\\\";\\n                }\\n                d1.push(r);\\n            }\\n            //多线路\\n            const d2 = {}\\n            for (let it of d1) {\\n                if (d2[it.title] == null) {\\n                    d2[it.title] = []\\n                }\\n                d2[it.title].push(it.url)\\n            }\\n\\n            for (let it of Object.keys(d2)) {\\n                _d.push({\\n                    title: it,\\n                    col_type: 'icon_2_round',\\n                    img: \\\"hiker://files/zf/img/播1.png\\\",\\n                    url: JSON.stringify({\\n                        urls: d2[it]\\n                    })\\n                })\\n\\n            }\\n        } catch (e) {}\\n        if (_d && _d.length) {\\n            data = data.concat(_d)\\n            saveFile(\\\"data.json\\\", JSON.stringify(_d));\\n        } else {\\n\\n            let _td = readFile(\\\"data.json\\\").replace(/{\\\"col_type.*line_blank\\\"},/g, \\\"\\\");\\n            log(_td)\\n            if (_td) {\\n                data = data.concat(JSON.parse(_td))\\n            }\\n        }\\n    } catch (e) {\\n        data.push({\\n            title: \\\"数据加载失败\\\",\\n            desc: JSON.stringify(e),\\n            col_type: \\\"text_1\\\"\\n        })\\n    }\\n}\\n$.exports = {\\n    renderLiveData: renderLiveData,\\n}\"}]","icon":"hiker://files/zf/img/播.png","proxy":""}