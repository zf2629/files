海阔视界规则分享，当前分享的是：小程序￥home_rule_v2￥base64://@笔趣阁@{"last_chapter_rule":".chapter9&&div,-1&&Text.js:'更新至：'+input","title":"笔趣阁","author":"zfspace","url":"https://m.biqusa.cc","version":1,"col_type":"movie_3_marquee","class_name":"","type":"read","class_url":"","area_name":"","area_url":"","sort_name":"","year_name":"","sort_url":"","year_url":"","find_rule":"js:\nvar d = [];\nvar html = getResCode();\n\nvar getRangeColors = function() {       \n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \n}\nd.push({\n    title: \"搜索\",\n    desc: \"ଘ(˵╹-╹)━✨•.,¸,.•*¯`•.,¸,.•*\",\n    url: \"'hiker://search?rule=\" + MY_RULE.title + \"&s='+input\",\n    col_type: \"input\",\n});\n\nvar nav = [\"排行\", \"玄幻\", \"修真\", \"都市\", \"穿越\", \"網遊\", \"科幻\", \"完本\", \"刘逼\"];\nvar nav_url = [\n    MY_URL + '/category/top' + '#autoCache#@rule=js:$.require(\"hot\")',\n    MY_URL + '/sort/1_fypage.html' + '#autoCache#@rule=js:$.require(\"qd\")',\n    MY_URL + '/sort/2_fypage.html' + '#autoCache#@rule=js:$.require(\"qd\")',\n    MY_URL + '/sort/3_fypage.html' + '#autoCache#@rule=js:$.require(\"qd\")',\n    MY_URL + '/sort/4_fypage.html' + '#autoCache#@rule=js:$.require(\"qd\")',\n    MY_URL + '/sort/5_fypage.html' + '#autoCache#@rule=js:$.require(\"qd\")',\n    MY_URL + '/sort/6_fypage.html' + '#autoCache#@rule=js:$.require(\"qd\")',\n    MY_URL + '/sort/9_fypage.html' + '#autoCache#@rule=js:$.require(\"qd\")',\n\nMY_URL + '/sort/10_fypage.html' + '#autoCache#@rule=js:$.require(\"qd\")',\n];\nfor (var i in nav) {\n    d.push({\n        title: '‘‘’’' + nav[i].fontcolor(\"#ffffff\"),\n        url: nav_url[i],\n        col_type: \"scroll_button\",\n        extra: {\n            'backgroundColor': getRangeColors()\n        }\n    });\n}\n\nvar tab = [\n    '最好看的',\n    '玄幻小說',\n    '修真小說',\n    '都市小說',\n    '穿越小說',\n    '網遊小說',\n    '科幻小說',\n];\nvar tab_set = pdfa(html, 'body&&.s_m,0:7');\ntab_set.forEach((data, i) => {\n    d.push({\n        col_type: \"line_blank\"\n    });\n    d.push({\n        title: '▍'.fontcolor(getRangeColors()) + tab[i].fontcolor(\"Black\"),\n        pic_url: i === 0 ? 'http://123.56.105.145/tubiao/system/95.png' : 'http://123.56.105.145/tubiao/system/76.png',\n        url: nav_url[i],\n        col_type: \"text_icon\",\n    });\n    var item = pdfa(data, '.s_m&&tr||.s_list');\n    item.forEach((item, i) => {\n        var img = pdfh(item, 'img&&src')\n        d.push({\n            title: i === 0 ? '‘‘’’<b>' + pdfh(item, '.s_title&&Text') : pdfh(item, 'a&&Text'),\n            desc: i === 0 ? '‘‘’’<small>' + pdfh(item, '.s_intro&&Text') : '',\n            img: img + \"@Referer=\",\n            url: pd(item, 'a&&href') + '#immersiveTheme##autoCache#@rule=js:$.require(\"er\")',\n            col_type: i === 0 ? 'movie_1_vertical_pic' : 'text_1',\n            extra: {\n                img: img\n            }\n        });\n    })\n})\nsetResult(d);","search_url":"https://m.biqusa.cc/book/search?searchtype=articlename&word=**","group":"#ZF","searchFind":"js:\nvar d = [];\nvar dhtml = getResCode();\n\n//log(dhtml)\nconst dlist = pdfa(dhtml, 'body&&tbody,1:');\ndlist.forEach(item => {\n    var img = pdfh(item, 'img&&src')\n    d.push({\n        title: pdfh(item, 'img&&alt').replace('笔趣阁', ''),\n        desc: pdfh(item, 'span,1&&Text'),\n        img: img + \"@Referer=\",\n        content: '👥 ' + pdfh(item, 'span&&Text') + '\\n' + pdfh(item, 'span,-1&&Text'),\n        url: pd(item, 'a&&href') + '#immersiveTheme##autoCache#@rule=js:$.require(\"er\")',\n        col_type: 'movie_3',\n        extra: {\n            img: img\n        }\n    })\n})\nsetResult(d);","detail_col_type":"movie_1","detail_find_rule":"","sdetail_col_type":"movie_1","sdetail_find_rule":"*","ua":"mobile","preRule":"","pages":"[{\"col_type\":\"movie_3\",\"name\":\"列表\",\"path\":\"qd\",\"rule\":\"js:\\nvar d = [];\\n\\nvar getRangeColors = function() {       \\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \\n}\\nif (MY_PAGE == 1) {\\n    d.push({\\n        title: \\\"搜索\\\",\\n        desc: \\\"ଘ(˵╹-╹)━✨•.,¸,.•*¯`•.,¸,.•*\\\",\\n        url: \\\"'hiker://search?rule=\\\" + MY_RULE.title + \\\"&s='+input\\\",\\n        col_type: \\\"input\\\",\\n    });\\n    pdfa(getResCode(), 'body&&.lb_top').forEach(function(data) {\\n        d.push({\\n            title: '▍'.fontcolor(getRangeColors()) + pdfh(data, '.t&&Text').fontcolor(\\\"Black\\\"),\\n            pic_url: 'http://123.56.105.145/tubiao/system/95.png',\\n            url: MY_URL + '#noHistory#',\\n            col_type: \\\"text_icon\\\"\\n        })\\n    })\\n}\\npdfa(getResCode(), 'body&&div,1&&table').forEach(function(data) {\\n    var img = pdfh(data, 'img&&src')\\n    d.push({\\n        title: '‘‘’’<b>' + pdfh(data, 'img&&alt').replace('笔趣阁', ''),\\n        desc: '👥 ‘‘’’<small>' + pdfh(data, 'div&&Text').split(\\\"-\\\")[1].split(/连|已/g)[0].fontcolor(\\\"#274c5e\\\") + '&nbsp;' + pdfh(data, 'span&&Text').fontcolor(\\\"#fa7298\\\") + '\\\\n' + pdfh(data, 'span,-1&&Text'),\\n        img: img + \\\"@Referer=\\\",\\n        url: pd(data, 'a&&href') + '#noHistory##immersiveTheme#' + '@rule=js:$.require(\\\"hiker://page/er\\\")',\\n        col_type: \\\"movie_1_vertical_pic\\\",\\n        extra: {\\n            img: img\\n        }\\n    })\\n})\\n\\nsetResult(d)\"},{\"col_type\":\"movie_1_vertical_pic\",\"name\":\"二級\",\"path\":\"er\",\"rule\":\"js:\\nvar d = [];\\nvar html = getResCode();\\nvar getRangeColors = function() {       \\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \\n}\\n\\nvar 標題 = '‘‘’’' + pdfh(html, '.t&&Text').bold();\\n\\nvar 作者 = pdfh(html, 'div,5&&Text').replace(/\\\\//g, ' ').small();\\n\\nvar 類別 = pdfh(html, 'div,6&&Text').replace(/\\\\//g, ' ').small();\\n\\nvar 更新 = '‘‘’’' + pdfh(html, 'div,7&&Text').replace(/\\\\//g, ' ').fontcolor(\\\"#6a5acd\\\").small();\\n\\nvar 圖片 = pd(html, 'img&&src') + \\\"@Referer=\\\";\\n\\nvar 簡介 = pdfh(html, '.lb_jj&&div,-1&&Text').replace('收起', '');\\n\\nfunction getHead(title) {\\n    return '‘‘’’<strong><font color=\\\"' + Color + '\\\">' + title + '</front></strong>';\\n}\\nlet line_model = 8;\\nlet line_type_model = 'blank_block';\\nd.push({\\n    title: 標題 + '\\\\n' + 作者 + '\\\\n' + 類別,\\n    desc: 更新,\\n    pic_url: 圖片,\\n    url: MY_URL + '#noHistory#',\\n    col_type: 'movie_1_vertical_pic_blur',\\n    extra: {\\n        gradient: true\\n    }\\n});\\nd.push({\\n    title: '‘‘’’' + '簡介：'.fontcolor(\\\"#1e90ff\\\").bold() + 簡介.substr(0, 55).small() + '...詳情'.fontcolor(\\\"red\\\").small(),\\n    url: 'hiker://empty##noHistory#' + '\\\\n' + 簡介 + `@rule=js:var res = {}; var d = [];d.push({title:'小說簡介：'+ MY_URL.split('hiker://empty#')[1],col_type: 'long_text'});res.data = d; setHomeResult(res);`,\\n    col_type: 'text_1'\\n});\\nfor (let i = 0; i < line_model; i++) {\\n    d.push({\\n        col_type: line_type_model\\n    })\\n}\\n\\nvar ad = pd(html, '#dibu1&&a&&href');\\nlet htmls = fetch(ad);\\nvar list = pdfa(htmls, '.chapter9&&div');\\nvar page_number = 50;\\ntry {\\n    if (pdfh(list[0], \\\"a&&Text\\\").match(/(\\\\d+)/)[0] > pdfh(list.slice(-1)[0], \\\"a&&Text\\\").match(/(\\\\d+)/)[0]) list.reverse()\\n} catch (e) {}\\n\\nfunction footprints(xianlu, page_number) {\\n    var t = Math.ceil(xianlu.length / page_number);\\n    var zuji = [];\\n    for (let i = 0; i < t; i++) {\\n        zuji.push(xianlu.slice(i * page_number, (i + 1) * page_number));\\n    }\\n    return zuji;\\n}\\nvar selected = footprints(list, page_number);\\n\\nvar tabs = [];\\nselected.forEach((page, index) => {\\n    tabs.push(`第 ${index + 1} 頁`);\\n})\\nvar tabs = tabs\\nvar lists = selected;\\n\\nfunction setTabs(tabs, vari) {\\n    d.push({\\n        title: (getVar('shsort') == '1') ? '““””<b><span style=\\\"color: #6a5acd\\\">逆序</span></b>' : '““””<b><span style=\\\"color: #ffd700\\\">正序</span></b>',\\n        url: `#noLoading#@lazyRule=.js:let conf = getVar('shsort');if(conf=='1'){putVar({key:'shsort', value:'0'});}else{putVar({key:'shsort', value:'1'})};refreshPage();'toast://切換排序成功'`,\\n        col_type: 'scroll_button'\\n    })\\n    for (var i = 0; i < tabs.length; i++) {\\n        var url = \\\"#noLoading#@lazyRule=.js:putMyVar('\\\" + vari + \\\"', '\\\" + i + \\\"');refreshPage(false);'toast://切換成功！';'#noHistory#hiker://empty'\\\";\\n        d.push({\\n            title: getMyVar(vari, '0') == i ? '‘‘’’' + tabs[i].fontcolor(\\\"#ffffff\\\").bold().small() : '‘‘’’' + tabs[i].small(),\\n            url: url,\\n            col_type: 'scroll_button',\\n            extra: {\\n                'backgroundColor': getMyVar(vari, '0') == i ? getRangeColors() : ''\\n            }\\n        })\\n    }\\n}\\n\\nfunction setLists(lists, index) {\\n    var list = lists[index];\\n    if (getVar('shsort') == '1') {\\n        var list = lists[index].reverse();\\n    }\\n    for (var j in list) {\\n        d.push({\\n            title: '‘‘’’' + pdfh(list[j], 'a&&Text').small(),\\n            url: pd(list[j], 'a&&href') + \\\"#autoPage##readTheme#\\\" + `@rule=js:` + $.toString(() => {\\n                var d = [];\\n                let cont = pdfa(getResCode(), 'body&&#nr1');\\n                let html = cont.map(it => '  ' + pdfh(it, '#nr1&&Html').split(\\\"chaptererror\\\")[0]).join(\\\"<br><br>\\\");\\n                d.push({\\n                    title: html,\\n                    col_type: \\\"rich_text\\\",\\n                    extra: {\\n                        textSize: 18,\\n                        click: true\\n                    }\\n                });\\n                setResult(d)\\n            }),\\n            col_type: 'text_1',\\n            extra: {\\n                title: pdfh(list[j], 'a&&Text'),\\n                url: pd(list[j], 'a&&href')\\n            }\\n        });\\n    }\\n}\\n\\nsetTabs(tabs, MY_URL);\\nsetLists(lists, getMyVar(MY_URL, '0'));\\nsetResult(d)\"},{\"col_type\":\"movie_3_marquee\",\"name\":\"熱榜\",\"path\":\"hot\",\"rule\":\"js:\\nvar d = [];\\nvar html = getResCode();\\nvar getRangeColors = function() {       \\n    return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).substr(-6);     \\n}\\npdfa(html, 'body&&.prev:not(:matches(小说分类))').forEach(function(data) {\\n    d.push({\\n        title: '‘‘’’' + '▍'.fontcolor(getRangeColors()) + pdfh(data, 'a&&Text').fontcolor(\\\"Black\\\"),\\n        pic_url: 'http://123.56.105.145/tubiao/unframed/417.png',\\n        url: pd(data, 'a&&href').replace('_1', '_fypage') + '#noHistory##autoCache#@rule=js:$.require(\\\"qd\\\")',\\n        col_type: \\\"movie_1\\\"\\n    })\\n})\\n\\nsetResult(d)\"}]","icon":"hiker://files/zf/cy/zhan.png","proxy":""}